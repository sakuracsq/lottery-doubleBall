<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ball.doubleball.mapper.common.BileRecordMapper" >
  <resultMap id="BaseResultMap" type="com.ball.doubleball.entity.BileRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="lottery_no" property="lotteryNo" jdbcType="INTEGER" />
    <result column="biler_id" property="bilerId" jdbcType="INTEGER" />
    <result column="biler_name" property="bilerName" jdbcType="VARCHAR" />
    <result column="bile_type" property="bileType" jdbcType="TINYINT" />
    <result column="bile_num" property="bileNum" jdbcType="INTEGER" />
    <result column="bile_his_rate" property="bileHisRate" jdbcType="INTEGER" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    <result column="adopt" property="adopt" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, lottery_no, biler_id, biler_name, bile_type, bile_num, bile_his_rate, ts, adopt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ball.doubleball.entity.BileRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bile_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bile_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bile_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ball.doubleball.entity.BileRecordExample" >
    delete from bile_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ball.doubleball.entity.BileRecord" >
    insert into bile_record (id, lottery_no, biler_id, 
      biler_name, bile_type, bile_num, 
      bile_his_rate, ts, adopt
      )
    values (#{id,jdbcType=INTEGER}, #{lotteryNo,jdbcType=INTEGER}, #{bilerId,jdbcType=INTEGER}, 
      #{bilerName,jdbcType=VARCHAR}, #{bileType,jdbcType=TINYINT}, #{bileNum,jdbcType=INTEGER}, 
      #{bileHisRate,jdbcType=INTEGER}, #{ts,jdbcType=TIMESTAMP}, #{adopt,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ball.doubleball.entity.BileRecord" >
    insert into bile_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="lotteryNo != null" >
        lottery_no,
      </if>
      <if test="bilerId != null" >
        biler_id,
      </if>
      <if test="bilerName != null" >
        biler_name,
      </if>
      <if test="bileType != null" >
        bile_type,
      </if>
      <if test="bileNum != null" >
        bile_num,
      </if>
      <if test="bileHisRate != null" >
        bile_his_rate,
      </if>
      <if test="ts != null" >
        ts,
      </if>
      <if test="adopt != null" >
        adopt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lotteryNo != null" >
        #{lotteryNo,jdbcType=INTEGER},
      </if>
      <if test="bilerId != null" >
        #{bilerId,jdbcType=INTEGER},
      </if>
      <if test="bilerName != null" >
        #{bilerName,jdbcType=VARCHAR},
      </if>
      <if test="bileType != null" >
        #{bileType,jdbcType=TINYINT},
      </if>
      <if test="bileNum != null" >
        #{bileNum,jdbcType=INTEGER},
      </if>
      <if test="bileHisRate != null" >
        #{bileHisRate,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="adopt != null" >
        #{adopt,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ball.doubleball.entity.BileRecordExample" resultType="java.lang.Integer" >
    select count(*) from bile_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bile_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.lotteryNo != null" >
        lottery_no = #{record.lotteryNo,jdbcType=INTEGER},
      </if>
      <if test="record.bilerId != null" >
        biler_id = #{record.bilerId,jdbcType=INTEGER},
      </if>
      <if test="record.bilerName != null" >
        biler_name = #{record.bilerName,jdbcType=VARCHAR},
      </if>
      <if test="record.bileType != null" >
        bile_type = #{record.bileType,jdbcType=TINYINT},
      </if>
      <if test="record.bileNum != null" >
        bile_num = #{record.bileNum,jdbcType=INTEGER},
      </if>
      <if test="record.bileHisRate != null" >
        bile_his_rate = #{record.bileHisRate,jdbcType=INTEGER},
      </if>
      <if test="record.ts != null" >
        ts = #{record.ts,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adopt != null" >
        adopt = #{record.adopt,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bile_record
    set id = #{record.id,jdbcType=INTEGER},
      lottery_no = #{record.lotteryNo,jdbcType=INTEGER},
      biler_id = #{record.bilerId,jdbcType=INTEGER},
      biler_name = #{record.bilerName,jdbcType=VARCHAR},
      bile_type = #{record.bileType,jdbcType=TINYINT},
      bile_num = #{record.bileNum,jdbcType=INTEGER},
      bile_his_rate = #{record.bileHisRate,jdbcType=INTEGER},
      ts = #{record.ts,jdbcType=TIMESTAMP},
      adopt = #{record.adopt,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ball.doubleball.entity.BileRecord" >
    update bile_record
    <set >
      <if test="lotteryNo != null" >
        lottery_no = #{lotteryNo,jdbcType=INTEGER},
      </if>
      <if test="bilerId != null" >
        biler_id = #{bilerId,jdbcType=INTEGER},
      </if>
      <if test="bilerName != null" >
        biler_name = #{bilerName,jdbcType=VARCHAR},
      </if>
      <if test="bileType != null" >
        bile_type = #{bileType,jdbcType=TINYINT},
      </if>
      <if test="bileNum != null" >
        bile_num = #{bileNum,jdbcType=INTEGER},
      </if>
      <if test="bileHisRate != null" >
        bile_his_rate = #{bileHisRate,jdbcType=INTEGER},
      </if>
      <if test="ts != null" >
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="adopt != null" >
        adopt = #{adopt,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ball.doubleball.entity.BileRecord" >
    update bile_record
    set lottery_no = #{lotteryNo,jdbcType=INTEGER},
      biler_id = #{bilerId,jdbcType=INTEGER},
      biler_name = #{bilerName,jdbcType=VARCHAR},
      bile_type = #{bileType,jdbcType=TINYINT},
      bile_num = #{bileNum,jdbcType=INTEGER},
      bile_his_rate = #{bileHisRate,jdbcType=INTEGER},
      ts = #{ts,jdbcType=TIMESTAMP},
      adopt = #{adopt,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>